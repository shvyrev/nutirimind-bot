package com.nutrimind.service;

import com.nutrimind.model.OnboardingStep;
import com.nutrimind.model.User;
import com.nutrimind.model.enums.UserState;
import io.smallrye.mutiny.Uni;
import jakarta.enterprise.context.ApplicationScoped;
import jakarta.inject.Inject;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.jboss.logging.Logger;

import java.util.List;

@Slf4j
@ApplicationScoped
@RequiredArgsConstructor
public class OnboardingService {
    private static final List<OnboardingStep> ONBOARDING_STEPS = List.of(
        new OnboardingStep(1, "age_height_weight", "–†–∞—Å—Å–∫–∞–∂–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ç–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç, —Ä–æ—Å—Ç –∏ –≤–µ—Å? (—Ñ–æ—Ä–º–∞—Ç: –≤–æ–∑—Ä–∞—Å—Ç —Ä–æ—Å—Ç –≤–µ—Å, –Ω–∞–ø—Ä–∏–º–µ—Ä: 30 175 70)"),
        new OnboardingStep(2, "health_goal", "–ö–∞–∫–∞—è —É —Ç–µ–±—è —Ü–µ–ª—å: –ø–æ—Ö—É–¥–µ—Ç—å, –Ω–∞–±—Ä–∞—Ç—å –º—ã—à–µ—á–Ω—É—é –º–∞—Å—Å—É –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–∏—Ç–∞—Ç—å—Å—è —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ?"),
        new OnboardingStep(3, "activity_level", "–°–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é —É —Ç–µ–±—è –ø–æ–ª—É—á–∞–µ—Ç—Å—è –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º –∏–ª–∏ —Ö–æ–¥–∏—Ç—å –ø–µ—à–∫–æ–º?"),
        new OnboardingStep(4, "communication_style", "–í—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è: —Ö–æ—á—É —Å—Ç—Ä–æ–≥–æ–≥–æ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞ –∏–ª–∏ —Ö–æ—á—É –ª—ë–≥–∫–æ–≥–æ –ø—Ä–∏—è—Ç–µ–ª—è?")
    );

    private final TelegramBotService telegramBotService;

    private final StateManager stateManager;

    public Uni<User> startOnboarding(User user) {
        return stateManager.transitionToState(user, UserState.ONBOARDING)
            .chain(updatedUser -> askQuestion(updatedUser, ONBOARDING_STEPS.get(0)));
    }

    public Uni<User> processAnswer(User user, String answer) {
        // –ë–∞–∑–æ–≤–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
        return askNextQuestion(user);
    }

    private Uni<User> askNextQuestion(User user) {
        // –í—Ä–µ–º–µ–Ω–Ω–æ - –∑–∞–¥–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å –ø–æ –ø–æ—Ä—è–¥–∫—É
        int nextStepIndex = 1;
        if (nextStepIndex < ONBOARDING_STEPS.size()) {
            return askQuestion(user, ONBOARDING_STEPS.get(nextStepIndex));
        } else {
            return completeOnboarding(user);
        }
    }

    private Uni<User> askQuestion(User user, OnboardingStep step) {
        return telegramBotService.sendMessage(user.telegramId, step.question())
            .chain(() -> stateManager.transitionToState(user, UserState.AWAITING_ANSWER));
    }

    private Uni<User> completeOnboarding(User user) {
        return stateManager.transitionToState(user, UserState.ACTIVE)
            .chain(updatedUser -> {
                String completionMessage = """
                    üéâ –û—Ç–ª–∏—á–Ω–æ! –û–Ω–±–æ—Ä–¥–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!
                    
                    –¢–µ–ø–µ—Ä—å —è –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å –ø–∏—Ç–∞–Ω–∏–µ–º.
                    –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–≤–æ–∏–º –ø–ª–∞–Ω–æ–º –ø–∏—Ç–∞–Ω–∏—è.
                    """;
                return telegramBotService.sendMessage(updatedUser.telegramId, completionMessage)
                    .chain(() -> Uni.createFrom().item(updatedUser));
            });
    }

    public boolean isOnboardingComplete(User user) {
        return user.state == UserState.ACTIVE;
    }
}