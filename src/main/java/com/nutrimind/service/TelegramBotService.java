package com.nutrimind.service;

import com.pengrad.telegrambot.TelegramBot;
import com.pengrad.telegrambot.model.Chat;
import com.pengrad.telegrambot.model.Message;
import com.pengrad.telegrambot.model.Update;
import com.pengrad.telegrambot.request.SendMessage;
import io.smallrye.mutiny.Uni;
import jakarta.enterprise.context.ApplicationScoped;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

import static java.util.Optional.ofNullable;
import static java.util.function.Predicate.not;

@Slf4j
@ApplicationScoped
@RequiredArgsConstructor
public class TelegramBotService {
    private final TelegramBot bot;

    record ChatMessage(Long chatId, String text) {
        public static ChatMessage of(Update update) {
            return new ChatMessage(update.message().chat().id(), update.message().text());
        }
    }

    public Uni<Void> handleUpdate(Update update) {
        return ofNullable(update)
                .filter(not(v -> v.message() == null))
                .map(ChatMessage::of)
                .map(this::handleMessageNew)
                .orElseGet(() -> Uni.createFrom().voidItem());
    }

    private Uni<Void> handleMessageNew(ChatMessage chatMessage) {
        return switch (chatMessage.text()) {
            case "/start" -> sendMessage(chatMessage.chatId(), "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ NutriMind! –ù–∞—á–Ω–µ–º –æ–Ω–±–æ—Ä–¥–∏–Ω–≥.");
            case "/help" -> sendHelpMessage(chatMessage.chatId());
            default -> sendMessage(chatMessage.chatId(), "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.");
        };
    }

    public Uni<Void> sendMessage(Long chatId, String text) {
        log.info("$ sendMessage() called with: chatId = [{}], text = [{}]", chatId, text);

        return Uni.createFrom().voidItem()
                .invoke(() -> {
                    SendMessage request = new SendMessage(chatId, text);
                    bot.execute(request);
                });
    }

    private Uni<Void> sendHelpMessage(Long chatId) {
        log.info("$ sendHelpMessage() called with: chatId = [{}]", chatId);

        String helpText = """
                ü§ñ *NutriMind Bot Help*
                
                –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
                /start - –ù–∞—á–∞—Ç—å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥
                /help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
                
                –í–æ –≤—Ä–µ–º—è –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ –ø–∏—Ç–∞–Ω–∏—è.
                """;
        return sendMessage(chatId, helpText);
    }
}